name: CI/CD

on:
  push:
    tags: v*
    branches: main
  pull_request:
    branches: main

env:
  GO_VERSION: '1.18.4' # Also in Dockerfile.

jobs:

  test:
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/bin
            ~/go/pkg
            ~/go/src
            ~/.cache/go-build
            ~/.cache/golangci-lint
            .gobincache
          key: v3-test-${{ runner.os }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            v3-test-${{ runner.os }}-

      - run: scripts/test

      - name: Report code coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        if: env.COVERALLS_TOKEN
        run: |
          scripts/cover
          .gobincache/goveralls -coverprofile=cover.out -service=GitHub

  build-and-release:
    needs: test
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    if: github.event_name == 'push'
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3

      - name: Turnstyle
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg
            ~/.cache/go-build
          key: v1-build-${{ runner.os }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            v1-build-${{ runner.os }}-

      - name: Build and push to official Docker registry
        if: github.ref_type == 'tag'
        uses: docker/setup-buildx-action@v2
        run: |
          docker login -u '${{ secrets.CR_USER }}' -p '${{ secrets.CR_PAT }}'
          if echo "$GITHUB_REF" | grep -q '^refs/tags/v'; then
            TAGS="${GITHUB_REF/refs\/tags\/v}"
          else
            #TAGS="$GITHUB_SHA latest"
            TAGS="latest"
          fi
          for TAG in $TAGS; do
            IMAGE_TAG="${{ secrets.CR_USER }}/$(basename ${GITHUB_REPOSITORY,,}):$TAG"
            docker build . --push --file Dockerfile --tag "$IMAGE_TAG" --platform linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm64,linux/arm/v6,linux/arm/v7,linux/ppc64le,linux/386
          done

      - run: echo -e "$GPG_KEY" | gpg --import
        if: github.ref_type == 'tag'
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}

      - run: scripts/release
        if: github.ref_type == 'tag'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
